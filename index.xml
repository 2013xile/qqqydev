<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>沉海记</title><link>https://qqqy.dev/</link><description>Recent content on 沉海记</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Thu, 21 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://qqqy.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Packaging and downloading files through streaming in NodeJS</title><link>https://qqqy.dev/packaging-and-downloading-files-through-streaming-in-nodejs/</link><pubDate>Thu, 21 Sep 2023 00:00:00 +0000</pubDate><guid>https://qqqy.dev/packaging-and-downloading-files-through-streaming-in-nodejs/</guid><description>&lt;h1 id="background">Background&lt;/h1>
&lt;p>Last week, I developed a feature that can package the log files produced by the application into a &lt;code>tar.gz&lt;/code> file and enbale online downloading. While this is may seem like a straight forward feature, there are still some intriguing aspects worth documenting.&lt;/p>
&lt;h1 id="generate-temporary-file-delete-later">Generate temporary file, delete later&lt;/h1>
&lt;p>The simplest method to implement this feature is to generate a tarball on the server&amp;rsquo;s disk and delete it after it&amp;rsquo;s been downloaded. The code is roughtly like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">fs&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;fs&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">tar&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;tar&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">unlink&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;fs/promises&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">dowload&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">files&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;logs.tar.gz&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">attachment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">tar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gzip&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">file&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="nx">files&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">fs&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createReadStream&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">__dirname&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="sb">`/&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;end&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kr">async&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">unlink&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">file&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">await&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>Note&lt;/strong>&lt;br>
Since we use &lt;a href="https://koajs.com/">Koa&lt;/a>, I can make use of &lt;code>ctx.attachment&lt;/code>. It is equivalent to:&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-disposition&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;attachment; filename=&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">filename&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;Content-type&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;application/gzip&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="stream-based-packaging-and-download">Stream-based packaging and download&lt;/h1>
&lt;p>Creating a temporary file and deleting it after download seems straightforward, but it can be considered cumbersome or less elegant since it still occupies disk space temporarily and may lead to issues if errors occur during this process and potential risk of leaving the file behind if deletion fails.&lt;/p>
&lt;p>A common alternative is packaging files via streaming, demonstrated by the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-TypeScript" data-lang="TypeScript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">tarFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">files&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">passthrough&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">stream&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PassThrougth&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gzip&lt;/span>: &lt;span class="kt">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="nx">files&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">pipe&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">passthrough&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;end&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passthrough&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">passthrough&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">async&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="nx">dowload&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">ctx&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">files&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">request&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">try&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">attachment&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;logs.tar.gz&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">ctx&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">await&lt;/span> &lt;span class="nx">tarFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">files&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">catch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">await&lt;/span> &lt;span class="nx">next&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here we use &lt;code>stream.PassThrough&lt;/code> to establish a stream as an intemediary for passing the input bytes across to the output.&lt;/p>
&lt;h1 id="break-data-into-chunks">Break data into chunks&lt;/h1>
&lt;p>Well, the code above seems to work fine initially. However, in production, it hangs when attempting to
package and download large log files. I guess I should chunk the data during packaging due to memory limitations.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-TypeScript" data-lang="TypeScript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">tarFile&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">files&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">[])&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">passthrough&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">stream&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PassThrougth&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">tar&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">c&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gzip&lt;/span>: &lt;span class="kt">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="nx">files&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passthrough&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;end&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passthrough&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">passthrough&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="node-tar-vs-tar-fs">&lt;code>node-tar&lt;/code> vs &lt;code>tar-fs&lt;/code>&lt;/h1>
&lt;p>Another issue arises while tring to download a changing online log file, resulting the &amp;ldquo;Error: did not encounter expected EOF&amp;rdquo; error throw by the package &lt;code>node-tar&lt;/code>. The only reference I have is this issue: &lt;a href="https://github.com/isaacs/node-tar/issues/238">https://github.com/isaacs/node-tar/issues/238&lt;/a>. I realized this is a feature and upon inspecting the source code, I couldn&amp;rsquo;t find a method to change this behavior without modifying the source code.&lt;/p>
&lt;p>I had to switch to another package, &lt;code>tar-fs&lt;/code>, for packaging, and it work seamlessly. While it does not offer a built-in gunzip feature, we have a native Node package called &lt;code>zlib&lt;/code> that can be utilized. The final code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-TypeScript" data-lang="TypeScript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">tarFiles&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">files&lt;/span>: &lt;span class="kt">string&lt;/span>&lt;span class="p">[])&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">any&lt;/span>&lt;span class="p">&amp;gt;&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Promise&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="nx">resolve&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">passthrough&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">stream&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PassThrough&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">gz&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">zlib&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">createGzip&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">pack&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">getLoggerFilePath&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">entries&lt;/span>: &lt;span class="kt">files&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passthrough&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;end&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passthrough&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">passthrough&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;data&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">chunk&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;end&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">end&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">gz&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">gz&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">on&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;error&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">reject&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">err&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>React中的 useCallback 和 ahooks 中的 useMemoizedFn</title><link>https://qqqy.dev/react%E4%B8%AD%E7%9A%84-usecallback-%E5%92%8C-ahooks-%E4%B8%AD%E7%9A%84-usememoizedfn/</link><pubDate>Wed, 20 Sep 2023 00:00:00 +0000</pubDate><guid>https://qqqy.dev/react%E4%B8%AD%E7%9A%84-usecallback-%E5%92%8C-ahooks-%E4%B8%AD%E7%9A%84-usememoizedfn/</guid><description>&lt;blockquote>
&lt;p>应该是一个比较常见的问题了，但是在我这段工作开始之前，我有两三年没有正儿八经写前端了，我的 &lt;code>React&lt;/code> 经验还停留在 &lt;code>React 16&lt;/code>, 基本上算一个新手，所以记录一下。&lt;/p>
&lt;/blockquote>
&lt;p>事情的起因是我在组件的 &lt;code>useEffect&lt;/code> 中依赖了一个外部函数，当函数没有添加到依赖数组时，eslint 会报错 &amp;ldquo;mssing dependency&amp;rdquo;.&lt;/p>
&lt;img src="https://s2.loli.net/2023/09/21/CBbOykuAm6VFW7N.png"/>
&lt;p>虽然报错级别是 &lt;code>warning&lt;/code>, 但是作为一个强迫症，我不能忍啊。啪，很快的，我把这个函数直接就丢到依赖数组里了，这下好了，我发现 &lt;code>useEffect&lt;/code> 开始不停地触发。&lt;/p>
&lt;p>这个问题通过搜索，不难找到答案，因为每次函数的地址都会发生修改，导致 &lt;code>useEffect&lt;/code> 的依赖数组更新。结合搜索结果，我也很快想起来，有 &lt;code>useCallback&lt;/code> 这个东西。但是我发现 &lt;code>useCallback&lt;/code> 在我这个场景下好像用不了，因为我这个函数本身是引入的一个外部定义好的函数，放到 &lt;code>useCallback&lt;/code> 里还是要求将函数传入依赖数组，不传eslint就会有 &lt;code>warning&lt;/code>. 作为一个强迫症，我不能忍啊。&lt;/p>
&lt;p>后面找到解决方法，可以用 &lt;code>useRef&lt;/code> 来解决。用 &lt;code>useRef&lt;/code> 把这个函数套一下，在 &lt;code>useEffect&lt;/code> 里用 &lt;code>ref.current&lt;/code> 来调用就可以了，也不会要求传入依赖参数了。&lt;/p>
&lt;p>这个问题到上面就解决完了。但是刚好我们的代码库里是有用到 &lt;a href="https://ahooks.js.org/">ahooks&lt;/a>, 有一天我在看文档的时候，发现有一个 &lt;code>useMemoizedFn&lt;/code>. 根据文档的描述:&lt;/p>
&lt;blockquote>
&lt;p>持久化 function 的 Hook，理论上，可以使用 useMemoizedFn 完全代替 useCallback。
在某些场景中，我们需要使用 useCallback 来记住一个函数，但是在第二个参数 deps 变化时，会重新生成函数，导致函数地址变化。
使用 useMemoizedFn，可以省略第二个参数 deps，同时保证函数地址永远不会变化。&lt;/p>
&lt;/blockquote>
&lt;p>这恰恰是用来完美解决我的问题的，于是我就想知道它是怎么实现的，是不是也是通过 &lt;code>useRef&lt;/code>. 一看&lt;a href="https://github.com/alibaba/hooks/blob/5412bb719de1666ff2e947dfa3e1d231b7f9746f/packages/hooks/src/useMemoizedFn/index.ts#L12">代码&lt;/a>，确实是。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-TypeScript" data-lang="TypeScript">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">useMemoizedFn&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">T&lt;/span> &lt;span class="na">extends&lt;/span> &lt;span class="na">noop&lt;/span>&lt;span class="p">&amp;gt;(&lt;/span>&lt;span class="nx">fn&lt;/span>: &lt;span class="kt">T&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">isDev&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">isFunction&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sb">`useMemoizedFn expected parameter is a function, got &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="k">typeof&lt;/span> &lt;span class="nx">fn&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">fnRef&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useRef&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">T&lt;/span>&lt;span class="p">&amp;gt;(&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// why not write `fnRef.current = fn`?
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// https://github.com/alibaba/hooks/issues/728
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">fnRef&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">current&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useMemo&lt;/span>&lt;span class="p">(()&lt;/span> &lt;span class="o">=&amp;gt;&lt;/span> &lt;span class="nx">fn&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="nx">fn&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">memoizedFn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">useRef&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">PickFunction&lt;/span>&lt;span class="err">&amp;lt;&lt;/span>&lt;span class="na">T&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">memoizedFn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">current&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">memoizedFn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">current&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kd">function&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">args&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">fnRef&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">current&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">args&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">memoizedFn&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">current&lt;/span> &lt;span class="kr">as&lt;/span> &lt;span class="nx">T&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>新的 Golang side project 技术选型记录</title><link>https://qqqy.dev/%E6%96%B0%E7%9A%84-golang-side-project-%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%E8%AE%B0%E5%BD%95/</link><pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate><guid>https://qqqy.dev/%E6%96%B0%E7%9A%84-golang-side-project-%E6%8A%80%E6%9C%AF%E9%80%89%E5%9E%8B%E8%AE%B0%E5%BD%95/</guid><description>&lt;blockquote>
&lt;p>打算利用工作之余的时间，写一个 side project, 简单记录一下前期的选型对比。&lt;/p>
&lt;/blockquote>
&lt;h1 id="语言-go">语言 &lt;code>Go&lt;/code>&lt;/h1>
&lt;p>这个 project 主要目标还是一个偏Web类的应用，这类应用用 JS 来撸肯定是最快最爽的，但是因为工作中的主要语言就是 JS，所以想换换口味。在上一份工作里有一半时间是写 Go 的，离职以后已经很久没用了，也不能荒废了，之前的工作写的也是偏业务功能的代码居多，没有很深入研究 Go, 所以想趁此机会捡起来一些。Go 用于开发Web应用也是比较不错的。而且我这个项目最终大概率是一个在本地运行居多的东西，我又不太想做成一个桌面应用，理想情况是利用一个可执行文件启动应用服务以后，用本地浏览器做应用载体，当然这个文件最终也可以打包成各个平台的软件包。Go的话利用 &lt;code>go:embed&lt;/code> 可以很方面地把前端产物打到最终的二进制文件里。综合上述几点原因，最终选择的开发语言是 &lt;strong>Go&lt;/strong>.&lt;/p>
&lt;h1 id="web框架-fiber">Web框架 &lt;code>fiber&lt;/code>&lt;/h1>
&lt;p>我对Web框架的要求基本上就是能处理 &lt;code>router&lt;/code> 和 &lt;code>handler&lt;/code> 就可以，Go 在这方面的库和轮子太多了，用过&lt;a href="https://github.com/gin-gonic/gin">gin&lt;/a>和&lt;a href="https://github.com/gorilla/mux">mux&lt;/a>, 甚至我觉得简单的场景 Go 自带的 &lt;code>http&lt;/code> 库也能用用。好像现在&lt;a href="https://github.com/gofiber/fiber">fiber&lt;/a> 还挺流行的，看了介绍，&amp;ldquo;Express inspired web framework&amp;rdquo;, 这个我熟，就它了。&lt;/p>
&lt;h1 id="orm框架-bun">ORM框架 &lt;code>Bun&lt;/code>&lt;/h1>
&lt;p>前面都比较顺利，在 ORM 框架选择上，费了不少功夫。其实在以前我基本上很少用ORM框架，最多用 query builder 库来拼 SQL。我要做的这个应用可能会有兼容多数据库的需要，所以写 raw sql 不太现实，也不能把时间都花在做 sql 兼容适配上，所以大概还是需要这么个东西。&lt;br>
本来我是想用以前我用的挺好的一个 query builder 的库 &lt;a href="https://github.com/doug-martin/goqu">goqu&lt;/a>, 但是看 Github 上面的代码最新提交已经是2年前了，比较想选择一个相对活跃的库，另外就是我还需要 &lt;em>migration&lt;/em> 的功能，这个库也没有。&lt;br>
在 &lt;a href="https://awesome-go.com/">awesome-go&lt;/a> 上看了一圈，发现 query builder 的库基本上都不带 &lt;em>migration&lt;/em> 功能，也想过用 query builder 库 + migration 库，但是很多单独的 &lt;code>migration&lt;/code> 库都是通过写 raw sql 来做的，没有实现不同数据库的兼容。
最后还是只能回头来看 ORM, &lt;a href="https://xorm.io/">xorm&lt;/a> 和 &lt;a href="https://gorm.io/">gorm&lt;/a> 我是用过的，基本上我对这两东西是拒绝的，很多东西太重了，还有光定义 &lt;code>Model&lt;/code> 和转换输出就麻烦。&lt;a href="https://github.com/ent/ent">ent&lt;/a> 算是另一种层面的 ORM ，但是看了下文档，感觉代码还是很冗杂，本质上没有降低写代码的心智负担。&lt;br>
反反复复看了看，还真让我找到一个比较合适的—— &lt;a href="https://bun.uptrace.dev/">bun&lt;/a>. 用法上基本是一个 query builder, 没有各种复杂的 Relation 需要定义，兼容常见的数据库，支持 &lt;em>migration&lt;/em> 功能，更新也比较活跃。不过具体体验还得用了才知道。&lt;/p></description></item><item><title>Diving into bulkCreate method in Sequelize</title><link>https://qqqy.dev/diving-into-bulkcreate-method-in-sequelize/</link><pubDate>Sat, 08 Jul 2023 00:00:00 +0000</pubDate><guid>https://qqqy.dev/diving-into-bulkcreate-method-in-sequelize/</guid><description>&lt;h1 id="background">Background&lt;/h1>
&lt;p>During my recent development work on a data synchronization feature using &lt;code>bulkCreate&lt;/code> method in &lt;a href="https://sequelize.org/api/v6/class/src/model.js~model#static-method-bulkCreate">Sequelize&lt;/a>, I encountered an issue with incorrect returning IDs when using the &lt;code>updateOnDuplicate: true&lt;/code> option. This led me to suspect that Sequelize generates the returning IDs through inference. To confirm my hypothesis, I decided to investigate the source code of Sequelize.&lt;/p>
&lt;h1 id="how-sequelize-generate-returning-ids-in-bulkcreate">How Sequelize generate returning IDs in &lt;code>bulkCreate&lt;/code>&lt;/h1>
&lt;p>Despite the extensive codebase of Sequelize, locating the &lt;code>bulkCreate&lt;/code> method was straightforward. A global search within the codebase led me directly to the &lt;code>src/model.js&lt;/code> file, where I found the relevant comment confirming my initial assumption.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * The success handler is passed an array of instances, but please notice that these may not completely represent the state of the rows in the DB. This is because MySQL
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * and SQLite do not make it easy to obtain back automatically generated IDs and other default values in a way that can be mapped to multiple records.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * To obtain Instances for the newly created values, you will need to query for them again.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, I proceeded to investigate this method by following the code snippets below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/model.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">const&lt;/span> &lt;span class="nx">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryInterface&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bulkInsert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getTableName&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">options&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="nx">records&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">fieldMappedAttributes&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">static&lt;/span> &lt;span class="nx">get&lt;/span> &lt;span class="nx">queryInterface&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sequelize&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getQueryInterface&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/sequelize.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryInterface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dialect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryInterface&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/dialects/sqlite/index.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Just take SQLite as an example.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryInterface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">SQLiteQueryInterface&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">sequelize&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryGenerator&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/dialects/sqlite/query-interface.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">class&lt;/span> &lt;span class="nx">SQLiteQueryInterface&lt;/span> &lt;span class="kr">extends&lt;/span> &lt;span class="nx">QueryInterface&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/dialects/abstract/query-generator.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="nx">bulkInsert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tableName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">records&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">attributes&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">options&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="p">...&lt;/span>&lt;span class="nx">options&lt;/span> &lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">options&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">type&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">QueryTypes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">INSERT&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">sequelize&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">queryGenerator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">bulkInsertQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">tableName&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">records&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">attributes&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">options&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">results&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/sequelize.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sql&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kr">const&lt;/span> &lt;span class="nx">query&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">dialect&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">Query&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">connection&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">options&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="kr">await&lt;/span> &lt;span class="nx">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sql&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">bindParameters&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/dialects/sqlite/query.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kr">async&lt;/span> &lt;span class="nx">run&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">sql&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">parameters&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">resolve&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">query&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">_handleQueryResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">columnTypes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">executionError&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">errForStack&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stack&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And finally I got what I was aiming for:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-JavaScript" data-lang="JavaScript">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// src/dialects/sqlite/query.js
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">_handleQueryResponse&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">metaData&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">columnTypes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">err&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">errStack&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// add the inserted row id to the instance
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isInsertQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">isUpsertQuery&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">handleInsertQuery&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">results&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">instance&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// handle bulkCreate AI primary key
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">constructor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">name&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="s1">&amp;#39;Statement&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">autoIncrementAttribute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">autoIncrementAttribute&lt;/span> &lt;span class="o">===&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primaryKeyAttribute&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">rawAttributes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primaryKeyAttribute&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">startId&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getInsertIdField&lt;/span>&lt;span class="p">()]&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">changes&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">[];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">startId&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="nx">startId&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">changes&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">push&lt;/span>&lt;span class="p">({&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">rawAttributes&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">model&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">primaryKeyAttribute&lt;/span>&lt;span class="p">].&lt;/span>&lt;span class="nx">field&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="p">});&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">result&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">metaData&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getInsertIdField&lt;/span>&lt;span class="p">()];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Upon the &lt;code>_handleQueryResponse&lt;/code> method, it became apparent that Sequelize utilizes the last inserted ID and infers the remaining IDs when using &lt;code>bulkCreate&lt;/code>. Consequently, when using &lt;code>updateOnDuplicate: true&lt;/code> option, there is a possibility of receiving incorrect IDs in the return.&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>A handy tip for obtaining accurate IDs&lt;/strong>&lt;br>
Enhance the data table by introducing a &lt;code>batch&lt;/code> field, assigning a batch number to each set of data being inserted. Subsequently, you can query the inserted IDs by using the corresponding batch number.&lt;/p>
&lt;/blockquote>
&lt;h1 id="risk-of-using-updateonduplicate-true">Risk of using &lt;code>updateOnDuplicate: true&lt;/code>&lt;/h1>
&lt;p>While utilizing the &lt;code>updateOnDuplicate: true&lt;/code> option, I observed that even though duplicate rows are skipped, the &lt;code>autoIncrement&lt;/code> key continues to increment. From the &lt;a href="https://dev.mysql.com/doc/refman/8.0/en/insert-on-duplicate.html">documentation of MySQL&lt;/a>, it said:&lt;/p>
&lt;blockquote>
&lt;p>The effects are not quite identical: For an InnoDB table where a is an auto-increment column, the INSERT statement increases the auto-increment value but the UPDATE does not.&lt;/p>
&lt;/blockquote>
&lt;p>The database follows a process of attempting to insert, incrementing the ID, and then the duplicate is detected. However, once the ID is auto-incremented, it cannot be rolled back.&lt;/p>
&lt;p>This situation presents a potential risk when utilizing a master-slave database architecture. As the ID is auto-incremented but duplicate is detected, the operation do not leave bin logs, there is a chance for key conficts to arise when the master goes down and the slave is promoted as the new master.&lt;/p></description></item><item><title>为什么我想离开腾讯？</title><link>https://qqqy.dev/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%83%B3%E7%A6%BB%E5%BC%80%E8%85%BE%E8%AE%AF/</link><pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate><guid>https://qqqy.dev/%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E6%83%B3%E7%A6%BB%E5%BC%80%E8%85%BE%E8%AE%AF/</guid><description>&lt;p>正式提交离职申请以后，我终于可以写一篇文章来回答这个在每一次面试的时候都会被问到的问题。用简短的话来回答，其实就是想做出改变，在工作上逃离舒适区，争取在生活上进入舒适区。&lt;/p>
&lt;h1 id="工作和成长">工作和成长&lt;/h1>
&lt;p>由于受到整体大环境和公司降本增效措施的影响，部门接连几次调整，年终奖惨淡。尽管在这个阶段对我来说，相比起钱，我更注重自己能力的成长，但是我手上负责的项目也被砍的七七八八，一直在接手和维护被裁同事留下来的项目，许久没有接触新的技术和更进一步的挑战。虽然每天早十晚六这么混着好像也不错，业务都比较熟悉，项目也没有太大的挑战，领导和同事也不错，除了周报比较难憋出来。但是毕竟现在还年轻，还是想跳出舒适区，进一步挑战自己。我是一个在工作中很需要获得参与感和成就感的人，但是在大厂搬砖，好像一个产品做好了做砸了，跟我的关系不是特别大，我只是一个对着需求单码代码的人。相对来说，腾讯也不是一个工程师文化很浓厚的公司，对于很多业务来说，大家都只想赚快钱，仅仅代表个人感觉，也不展开了。在大公司很多时候技术栈的选择也比较有限，只能使用自研产品。总而言之，就是我需要换个新的环境，接受新的学习和挑战，是时候离开了。初步的计划是自我学习和调整，往某一个方向钻的深入一些，另外就是更多的参与到开源项目，学习和应用新的主流的开源技术。当然也要赚点生活费。&lt;/p>
&lt;h1 id="生活和家庭">生活和家庭&lt;/h1>
&lt;p>算上上大学的时间，一转眼已经在深圳待了六年半，曾经很喜欢这个城市，现在却只觉得这个城市遥远。我跟同事讨论为啥深圳的道路要让行人和自行车、电动车都挤在一条狭小的人行道上，同事开玩笑说深圳的路是给有车的人设计的，没车的人滚一边去。望着高耸入云的房价，我不甘心成为这个城市的养料。于是跟女朋友商量了一下，决定去广州生活，如果广州留不下，我们还可以去佛山。总而言之，目的是通过降低欲望，提升生活质量和幸福感。在深圳的时候，生活的环境都是水泥钢筋，好像大家讨论的都是薪资、股票、贷款，一门心思想着搞钱。相比之下，广州虽然也是大城市，但是生活气息还是浓厚不少，物价也更低，可以用跟在深圳差不多的价格租到面积大一倍的房子，而且是生活配套齐全的大小区，唯一的不足可能是不常有蓝天白云。&lt;/p>
&lt;h1 id="未来">未来&lt;/h1>
&lt;p>通过最近面试，发现自己还有很多的不足。感觉自己未来还是比较想往技术方向发展，想更深入地钻研，所以可能会让自己慢下来，进一步自我学习，做更多的思考和沉淀。&lt;/p></description></item><item><title>面试国外远程公司的一些记录</title><link>https://qqqy.dev/%E9%9D%A2%E8%AF%95%E5%9B%BD%E5%A4%96%E8%BF%9C%E7%A8%8B%E5%85%AC%E5%8F%B8%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</link><pubDate>Mon, 20 Mar 2023 00:00:00 +0000</pubDate><guid>https://qqqy.dev/%E9%9D%A2%E8%AF%95%E5%9B%BD%E5%A4%96%E8%BF%9C%E7%A8%8B%E5%85%AC%E5%8F%B8%E7%9A%84%E4%B8%80%E4%BA%9B%E8%AE%B0%E5%BD%95/</guid><description>&lt;p>去年11月份开始陆续在网上向国外一些支持远程工作的公司海投简历，记录一下这段经历。其实能拿到面试机会的就非常少，想去的估计就只有一两家了，最后也没有把握住机会。很多公司更倾向于在北美和欧洲招人，还有的因为数据、法律等问题明确拒绝中国大陆的人，可以参考我维护的&lt;a href="https://remotefrom.cn">支持在中国远程工作的公司的列表&lt;/a>。一开始我是在angel.co(一个创业公司网站，现在改名叫wellfound)上面投递的简历，大多数都没有回复。后面发现hackernews上有个叫whoishiring的账号，每个月1号都会发布一个帖子，让正在招人的公司可以在下面跟帖发jd，通过这个列表来投递简历是效率比较高的。还有些公司比较高冷，只能在他们的官网上发现，这个主要是找github上的项目以及想一下自己平常用的一些开发工具，去看对应的公司招不招人。&lt;/p>
&lt;p>最先给面试机会的是brankas，网上搜了下是印尼一家做金融开放API的公司，我没有任何FinTech的工作经验，也不是很感兴趣，不过打算练练手。首先是第一面是hr面，互相了解一下，会问一些简单的behavior questions，但是问到期望薪资的时候，我说出来的时候感觉对方有点吃惊，因为她用了&amp;quot;Very expensive&amp;quot;来形容，并且表示这个薪资一般是需要8~10年经验的，不过她还是表示会给我发take home assignment. Assignment比较简单，就是用go写一个简单的http服务，处理一下文件上传保存请求。但是写完发过去就没有下文了，连个拒信都没有，估计是说期望薪资的时候就不打算要了。&lt;/p>
&lt;p>第二个给面试机会的公司是Slab，洛杉矶一个做团队文档工具的小公司，产品跟notion有点像，但是试用下来感觉有些地方做的比notion还好。网上调查了下，两个co-founder是好像中国人，团队里也有之前在石墨工作的中国人，CEO是quilljs作者，整体感觉都不错，挺想去的。面试流程是比较标准的美企流程，首先是一个initial screen, 第一次约在北京时间凌晨5点，我爬起来以后，发现hr搞错了zoom链接，发了数封邮件都没有响应，就回去睡觉了，后面重新约了一次，听hr介绍了一下他们公司，之后发过来一个详细的邮件介绍hiring process. 先做一个online accessment, 限时一小时，这个题是从他们的代码功能里抽象的，不太典型但也不太难，用回溯写出来了。接下来约了两个小时的面试，一个小时System Design, 一个小时Behavior Questions. 面试之前我准备了非常多SD的东西，准备了一周多时间。正式面试约在北京时间早上7点，面SD的时候是CEO和一个工程师一起，题目也是Web应用类的，我抽象出来是一个爬虫+排序的项目，但是他们并不要求考虑可用性、高性能之类的，导致我准备的很多公式化的内容无用武之地，感觉这个项目实现起来并不复杂，所以也没太get到他们想要考察的点是什么，本来应该是我比较擅长的东西，但是确有点抓瞎。Behavior Questions详细问了简历上的两段工作经历，第一段经历是我大学时候的远程工作经历，时间比较长了，但还是问的比较详细，而我准备的不是太充分。其他的回答的感觉还可以。自我感觉表现比较平庸，没用发挥自己的优势，面试结束后两天，收到了拒信，当时还是挺难受的，不过也不算意料之外。&lt;/p>
&lt;p>第三个说可以聊一聊的公司是澳大利亚一家卖酒的公司，叫Good Pair Days，他们的产品看上去还可以，但我兴趣算是一般吧，加上技术栈不太符合，所以也没有特别准备。然后跟对方的CTO聊了半个小时，感觉双方不是太契合，就没有后续了。&lt;/p>
&lt;p>到这里很多能找到的支持远程的公司其实都被我投的七七八八了，比较绝望。后面发现了&lt;a href="https://www.recurse.com/">Recurse Center&lt;/a>项目，这个项目在中文互联网资料非常少，仔细看了下网站，蛮有兴趣的，想着能休息一段时间，自己学习提升，跟世界各地的人交流一下也不错。于是仔细写了申请，很快收到邮件说申请通过了，迎来第一次面试。面试官也是这个项目的参与者，但他不算太热情，有一点口音，一开始我一直没适应他用RC这个简称，第一个问题我就听错了，他问我会怎么跟别人介绍这个项目，我听成了怎么介绍我自己，给他念了一大段自我介绍，后面他纠正后我才重新回答。在聊天过程中我卡在一个问题比较久，他让我描述一个最近解决的bug，因为我平常做的东西大多需要结合业务背景，一下子不知道怎么说，最后我想着挑一个简单的说，就讲了我最近在自己的项目里面遇到的一个变量赋值的小bug. 其他的问题还算常规，自我感觉答的还行。没想到面试结束后很快就收到了拒信，没有讲原因，这个让我难受了蛮久，没想到一个学习项目也没有申请上。&lt;/p>
&lt;p>虽然最后也没拿到海外公司的offer, 但这个过程还是收获不少。第一是英语能力还要加强，每次我都会把要说的东西先写下来，然后结合chrome的实时翻译，面试的时候倒也能解决80%的问题，但是遇到没准备的问题，往往回答的不是很好，比如问到我不擅长什么东西，可能这个问题我用中文都很少回答，所以就回答的结结巴巴。第二个是技术方面，在海投过程中，发现了不少优秀的产品和项目，也发现了很多技术牛人的github，感觉毕业后几年在大厂里工作，忙着写业务搬砖，对自己要求降低了、松懈了，这个过程让我意识到自己还有很多需要提升的地方，激发了我学习的兴趣，也促成了我想要离职，学习和调整自己，同时参与到开源项目的想法。&lt;/p></description></item></channel></rss>